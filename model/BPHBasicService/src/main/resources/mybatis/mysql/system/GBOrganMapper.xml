<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.bph.dao.system.GBOrganMapper">
	<resultMap id="BaseResultMap" type="com.tianyi.bph.domain.system.GBOrgan">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="path" property="path" jdbcType="VARCHAR" />
		<result column="gb_platform_id" property="gbPlatformId"
			jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="std_id" property="stdId" jdbcType="VARCHAR" />
		<result column="hasChild" property="hasChild" jdbcType="BIT" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, path, gb_platform_id, parent_id, type, std_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.tianyi.bph.query.system.GBOrganExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_gb_organ
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_gb_organ
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_gb_organ
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tianyi.bph.domain.system.GBOrgan">
		insert into t_gb_organ (id,
		name, path,
		gb_platform_id, parent_id, type,
		std_id)
		values
		(#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{path,jdbcType=VARCHAR},
		#{gbPlatformId,jdbcType=INTEGER},
		#{parentId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
		#{stdId,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.tianyi.bph.domain.system.GBOrgan">
		insert into t_gb_organ
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="path != null">
				path,
			</if>
			<if test="gbPlatformId != null">
				gb_platform_id,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="stdId != null">
				std_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				#{path,jdbcType=VARCHAR},
			</if>
			<if test="gbPlatformId != null">
				#{gbPlatformId,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="stdId != null">
				#{stdId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update t_gb_organ
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.path != null">
				path = #{record.path,jdbcType=VARCHAR},
			</if>
			<if test="record.gbPlatformId != null">
				gb_platform_id = #{record.gbPlatformId,jdbcType=INTEGER},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=INTEGER},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
			<if test="record.stdId != null">
				std_id = #{record.stdId,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_gb_organ
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		path =
		#{record.path,jdbcType=VARCHAR},
		gb_platform_id =
		#{record.gbPlatformId,jdbcType=INTEGER},
		parent_id =
		#{record.parentId,jdbcType=INTEGER},
		type =
		#{record.type,jdbcType=INTEGER},
		std_id =
		#{record.stdId,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.tianyi.bph.domain.system.GBOrgan">
		update t_gb_organ
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="path != null">
				path = #{path,jdbcType=VARCHAR},
			</if>
			<if test="gbPlatformId != null">
				gb_platform_id = #{gbPlatformId,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="stdId != null">
				std_id = #{stdId,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tianyi.bph.domain.system.GBOrgan">
		update t_gb_organ
		set name = #{name,jdbcType=VARCHAR},
		path = #{path,jdbcType=VARCHAR},
		gb_platform_id = #{gbPlatformId,jdbcType=INTEGER},
		parent_id =
		#{parentId,jdbcType=INTEGER},
		type = #{type,jdbcType=INTEGER},
		std_id =
		#{stdId,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>



	<select id="selectByGBOrganId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,(select count(id) from t_gb_organ where parent_id=t.id) >0 as
		hasChild
		from t_gb_organ t where
		<choose>
			<when test="gbId != null">
				t.parent_id = #{gbId,jdbcType=INTEGER}
			</when>
			<otherwise>
				t.parent_id is null
			</otherwise>
		</choose>
	</select>
	<sql id="Base_Column_List1">
		t.id, t.name, t.path, t.gb_platform_id, t.parent_id,
		t.type, t.std_id
	</sql>

</mapper>