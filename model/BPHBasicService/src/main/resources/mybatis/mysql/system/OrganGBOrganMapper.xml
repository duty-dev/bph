<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.bph.dao.system.OrganGBOrganMapper">
	<resultMap id="BaseResultMap" type="com.tianyi.bph.domain.system.OrganGBOrganKey">
		<id column="organ_id" property="organId" jdbcType="INTEGER" />
		<id column="gb_organ_id" property="gbOrganId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		organ_id, gb_organ_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.tianyi.bph.query.system.OrganGBOrganExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from r_organ_gb_organ
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="com.tianyi.bph.domain.system.OrganGBOrganKey">
		delete from
		r_organ_gb_organ
		where organ_id = #{organId,jdbcType=INTEGER}
		and
		gb_organ_id = #{gbOrganId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.tianyi.bph.query.system.OrganGBOrganExample">
		delete from r_organ_gb_organ
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.tianyi.bph.domain.system.OrganGBOrganKey">
		insert into r_organ_gb_organ
		(organ_id, gb_organ_id)
		values (#{organId,jdbcType=INTEGER},
		#{gbOrganId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.tianyi.bph.domain.system.OrganGBOrganKey">
		insert into r_organ_gb_organ
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="organId != null">
				organ_id,
			</if>
			<if test="gbOrganId != null">
				gb_organ_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="organId != null">
				#{organId,jdbcType=INTEGER},
			</if>
			<if test="gbOrganId != null">
				#{gbOrganId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByExampleSelective" parameterType="map">
		update r_organ_gb_organ
		<set>
			<if test="record.organId != null">
				organ_id = #{record.organId,jdbcType=INTEGER},
			</if>
			<if test="record.gbOrganId != null">
				gb_organ_id = #{record.gbOrganId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update r_organ_gb_organ
		set organ_id =
		#{record.organId,jdbcType=INTEGER},
		gb_organ_id =
		#{record.gbOrganId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>


	<select id="selectGBOrganIdByOrganId" resultType="Integer"
		parameterType="Integer">
		select gb_organ_id from r_organ_gb_organ where
		organ_id=#{organId,jdbcType=INTEGER}
	</select>



	<resultMap id="BaseResultMap1" type="com.tianyi.bph.domain.system.OrganGbOrgan">
		<id column="organ_id" property="organId" jdbcType="INTEGER" />
		<id column="parent_id" property="parentId" jdbcType="INTEGER" />
		<collection property="gbOrganIds" ofType="INTEGER" column="organ_id">
			<result column="gb_organ_id" />
		</collection>
	</resultMap>
	<select id="selectByOrganId" resultMap="BaseResultMap1"
		parameterType="java.lang.String">
		select g.gb_organ_id ,g.organ_id,o.parent_id from r_organ_gb_organ g
		left join t_organ o on g.organ_id= o.organ_id
		<if test="path!=null">
			where o.path like CONCAT(#{path,jdbcType=VARCHAR},'%');
		</if>
	</select>

	<select id="queryExistGbId" resultType="Integer"
		parameterType="Integer">
		select g.gb_organ_id from r_organ_gb_organ g
		left join t_organ o on
		g.organ_id= o.organ_id
		<if test="path!=null">
			where o.path like CONCAT(#{path,jdbcType=VARCHAR},'%');
		</if>
	</select>

</mapper>