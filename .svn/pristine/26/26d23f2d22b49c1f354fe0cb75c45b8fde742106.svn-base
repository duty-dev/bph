<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/jdbc 
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
           http://www.springframework.org/schema/task  
           http://www.springframework.org/schema/task/spring-task-3.2.xsd
           http://www.springframework.org/schema/rabbit 
           http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd">

	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:component-scan base-package="com.tianyi.bph">
		<context:include-filter type="regex"
			expression=".dao.*" />
		<context:include-filter type="regex"
			expression=".service.*" />
	</context:component-scan>

	<import
		resource="classpath:com/tianyi/bph/common/mq/config/applicationContext-rabbitmq.xml"></import>
	<!-- 消费者使用 <bean id="consumeMessage" class="com.tianyi.bph.rest.action.system.dataUpdate.Consumer" 
		/> <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" 
		prefetch="1"> <rabbit:listener queues="baseDataQueue" ref="consumeMessage" 
		/> </rabbit:listener-container> 队列，消费者使用 <rabbit:queue durable="true" auto-delete="true" 
		exclusive="false" name="baseDataQueue" id="baseDataQueue" /> -->



	<bean class="com.tianyi.bph.common.SpringContextUtils" />
	<!-- oracle mapper <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="typeAliasesPackage" 
		value="com.tianyi.bph.domain,com.tianyi.bph.service.query,com.tianyi.bph.bo" 
		/> <property name="mapperLocations" value="classpath*:/mybatis/oracle/*/*Mapper.xml" 
		/> </bean> -->
	<!-- mysql mapper -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage"
			value="com.tianyi.bph.domain,com.tianyi.bph.service.query,com.tianyi.bph.bo" />
		<property name="mapperLocations" value="classpath*:/mybatis/mysql/*/*Mapper.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.tianyi.bph.dao" />
		<property name="annotationClass" value="com.tianyi.bph.dao.MyBatisRepository" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 事物配置 -->
	<tx:annotation-driven transaction-manager="txJdbcManager" />
	<bean id="txJdbcManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--spring jdbc 模版引入 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	<!-- 事物配置结束 -->


	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
	<!-- <aop:config proxy-target-class="true"> <aop:advisor pointcut="execution(* 
		com.tianyi.bph.service.impl.*Service.*(..))" advice-ref="txAdvice" /> <aop:advisor 
		pointcut="execution(* com.tianyi.bph.service.impl*.*Service.*(..))" advice-ref="txAdvice" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="get*" read-only="true" /> <tx:method name="find*" 
		read-only="true" /> <tx:method name="*" propagation="REQUIRED" /> </tx:attributes> 
		</tx:advice> <task:executor id="executor" pool-size="5" /> <task:scheduler 
		id="scheduler" pool-size="10" /> <task:annotation-driven executor="executor" 
		scheduler="scheduler" /> -->
	<!-- oracle 数据库 <beans profile="development"> <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
		init-method="init" destroy-method="close"> <property name="url" value="jdbc:log4jdbc:oracle:thin:@25.30.9.43:1521:mega" 
		/> <property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" /> 
		<property name="username" value="bph" /> <property name="password" value="bph" 
		/> <property name="validationQuery" value="SELECT 'x' from DUAL" /> <property 
		name="testWhileIdle" value="true" /> </bean> </beans> <beans profile="test"> 
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" 
		destroy-method="close"> <property name="url" value="jdbc:log4jdbc:oracle:thin:@25.30.9.43:1521:mega" 
		/> <property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" /> 
		<property name="username" value="bph" /> <property name="password" value="bph" 
		/> </bean> </beans> -->

	<!-- mysql 数据库 -->
	<beans profile="development">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="url" value="jdbc:log4jdbc:mysql://25.30.9.182:3306/bph?allowMultiQueries=true&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" />

			<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
			<property name="username" value="root" />
			<property name="password" value="123456" />
			<property name="maxActive" value="30" />
			<property name="maxIdle" value="20" />
		</bean>
	</beans>
	<beans profile="test">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">

			<property name="url"
				value="jdbc:log4jdbc:mysql://25.30.9.182:3306/bph?allowMultiQueries=true&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8" />

			<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
			<property name="username" value="root" />
			<property name="password" value="123456" />
		</bean>
	</beans>


</beans>