<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
           http://www.springframework.org/schema/jdbc 
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
           http://www.springframework.org/schema/task  
           http://www.springframework.org/schema/task/spring-task-3.2.xsd">
	
	<context:component-scan base-package="com.tianyi.bph">
		<context:include-filter type="regex" expression=".dao.*"/>
		<context:include-filter type="regex" expression=".service.*.*(..)"/>
	</context:component-scan>
	
	<bean class="com.tianyi.bph.common.SpringContextUtils" />
	
<!-- 	<bean class="com.tianyi.ehomeProtocol.access.service.AccessTranceportService">
		<constructor-arg>
			<bean class="com.tianyi.ehome.service.AccServerProviderImp"/>
		</constructor-arg>
	</bean> -->
	

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.tianyi.bph.domain,com.tianyi.bph.service.query" />
		<property name="mapperLocations" value="classpath*:/mybatis/*/*Mapper.xml" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" 	value="com.tianyi.bph.dao" />
		<property name="annotationClass" value="com.tianyi.bph.dao.MyBatisRepository"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.tianyi.bph.service.*Service.*(..))" advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.tianyi.bph.service.*.*Service.*(..))" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*"  read-only="true" />
			<tx:method name="find*"  read-only="true" />
			<tx:method name="*"  propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<task:executor id="executor" pool-size="5" />  
    <task:scheduler id="scheduler" pool-size="10" />  
    <task:annotation-driven executor="executor" scheduler="scheduler" />  

	<beans profile="development">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close"> 
		  	<property name="url" value="jdbc:log4jdbc:oracle:thin:@25.30.9.43:1521:mega" />
			<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
			<property name="username" value="bph" />
			<property name="password" value="bph" />
			<property name="validationQuery" value="SELECT 'x' from DUAL" />
			<property name="testWhileIdle" value="true" />
		</bean>
	</beans>
	
	<beans profile="test">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close"> 
		  	<property name="url" value="jdbc:log4jdbc:oracle:thin:@25.30.9.43:1521:mega" />
			<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
			<property name="username" value="bph" />
			<property name="password" value="bph" />
		</bean>
	</beans>

</beans>