<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.bph.dao.system.GroupOtherMapper" >
  <resultMap id="BaseResultMap" type="com.tianyi.bph.domain.system.GroupOther" >
    <result column="GROUP_ID" property="groupId" jdbcType="INTEGER" />
    <result column="LIST_ID" property="listId" jdbcType="INTEGER" />
    <result column="TYPE" property="groupType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    GROUP_ID, LIST_ID,TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tianyi.bph.query.system.GroupOtherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_group_other
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.tianyi.bph.domain.system.GroupOther" >
    insert into r_group_other (GROUP_ID, LIST_ID,TYPE)
    values (#{groupId,jdbcType=INTEGER}, #{listId,jdbcType=INTEGER},#{groupType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tianyi.bph.domain.system.GroupOther" >
    insert into r_group_other
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        GROUP_ID,
      </if>
      <if test="listId != null" >
        LIST_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="listId != null" >
        #{listId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update r_group_other
    <set >
      <if test="record.groupId != null" >
        GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.listId != null" >
        LIST_ID = #{record.listId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update r_group_other
    set GROUP_ID = #{record.groupId,jdbcType=INTEGER},
      LIST_ID = #{record.listId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <select id="getListIdsByGroupId" parameterType="java.lang.Integer" resultType="java.lang.String">
  	select GROUP_CONCAT(LIST_ID) from r_group_other where GROUP_ID=#{groupId,jdbcType=DECIMAL}
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from r_group_other
    where GROUP_ID = #{groupId,jdbcType=DECIMAL}
  </delete>
  
  <select id="selectByGroupId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select  <include refid="Base_Column_List" /> 
  from r_group_other where GROUP_ID = #{groupId,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteSource" parameterType="com.tianyi.bph.domain.system.GroupOther">
  	delete from r_group_other where 
  	GROUP_ID=#{groupId,jdbcType=DECIMAL}
  	AND 
  	LIST_ID =#{listId,jdbcType=DECIMAL}
  </delete>
  
</mapper>